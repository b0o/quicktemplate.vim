Foo

{% package foo %}

{% plain %}
	plain on the top level becomes
	a go comment
{% endplain %}

{% code
	var a = "foobar"
%}

{% plain %}
	global    plain
{% endplain %}

{% collapsespace %}
	global    collapsespace
{% endcollapsespace %}

{% iface iQux {
	Foo(a int)
	Bar(a int, b string)
} %}

{% func abc() %}
	{% plain %}
		func    plain
		{%s "foo" %}
	{% endplain %}
	{% stripspace %}
		func    stripspace
	{% endstripspace %}

	{% code a := []string{"lorem", "ipsum"}
	mystr := ""
	for s := range a {
		mystr += s
	}
	%}
	{%s mystr %}

	{% if 1 == 1 %}
		{% for i := 0; i < n; i++ %}
				num{% space %}{%d i %}{% newline %}
		{% endfor %}
		bar
	{% endif %}

	{% switch a %}
		{% case "foo" %}
			bar
		{% case "qux" %}
			lorem
		{% default %}
			ipsum
	{% endswitch %}

	{% cat "./foo.txt" %}
	{%s math.complex(math.pi/2) %}
	{%= time.Now() %}
	{% comment %}
		comments are not inserted into go
		code at all
	{% endcomment %}
	{%d= fooBar() %}

	{% plain %}
		Plain on the inside of a func
		is added to the output
		Tags are ignored: {% asd %}
	{% endplain %}
{% endfunc %}
